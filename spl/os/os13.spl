//load init/login code
loadi(65, 7);
loadi(66, 8);

//load int=10 exit handler
loadi(22, 35);
loadi(23, 36);

//load exception handler to memory
loadi(2, 15);
loadi(3, 16);

//load interrupt routine for timer
loadi(4, 17);
loadi(5, 18);

//load interrupt routine for write
loadi(16, 29);
loadi(17, 30);

//load library code to memory
loadi(63, 13);
loadi(64, 14);

//load idle process code to memory
loadi(69,11);
loadi(70,12);

//load module7 to memory
loadi(54, 67);
loadi(55, 68);

//...............FOR IDLE PROCESS...............
SP=[82*512 - 1];
call BOOT_MODULE;

PTBR=PAGE_TABLE_BASE;
PTLR=10;

[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

[PTBR+4]=-1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

[PTBR+8]=69;
[PTBR+9]="0100";
[PTBR+10]=70;
[PTBR+11]="0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16]=81;
[PTBR+17]="0110";
[PTBR+18]=-1;
[PTBR+19]="0000";

[PROCESS_TABLE+1]=0;
[PROCESS_TABLE+4]=RUNNING;
[PROCESS_TABLE+11]=82;
[PROCESS_TABLE+13]=8*512;
[PROCESS_TABLE+12]=0;
[PROCESS_TABLE+14]=PAGE_TABLE_BASE;
[PROCESS_TABLE+15]=10;

[SYSTEM_STATUS_TABLE+1]=0;

[81*512]=[69*512 + 1];
SP=8*512;

breakpoint;
ireturn;

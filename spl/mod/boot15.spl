breakpoint;

//load init/login code
loadi(65, 7);
loadi(66, 8);

//load interrupt routine for INT=10
loadi(22, 35);
loadi(23, 36);

//load code for exception handler
loadi(2, 15);
loadi(3, 16);

//load interrupt routine for timer
loadi(4, 17);
loadi(5, 18);

//load interrupt routine for write
loadi(16, 29);
loadi(17, 30);

//load library code
loadi(63, 13);
loadi(64, 14);

//load even nos code (exec file)
loadi(83, 69);

//load MODULE_5
loadi(50, 63);
loadi(51, 64);

//load MODULE_0
loadi(40,53);
loadi(41,54);

//load MODULE_4
loadi(48,61);
loadi(49,62);

//...............FOR INIT PROCESS...............
PTBR=PAGE_TABLE_BASE+20;
PTLR=10;

[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

[PROCESS_TABLE+16+1]=1;
[PROCESS_TABLE+16+4]=CREATED;
[PROCESS_TABLE+16+11]=80;
[PROCESS_TABLE+16+12]=0;
[PROCESS_TABLE+16+13]=8*512;
[PROCESS_TABLE+16+14]=PAGE_TABLE_BASE+20;
[PROCESS_TABLE+16+15]=10;

[76*512] = [65 * 512 + 1];

//...............FOR EXEC FILE...............(EVEN NO.S PROGRAM)
PTBR=PAGE_TABLE_BASE+40;
PTLR=10;

[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

[PTBR+4]=85;
[PTBR+5]="0110";
[PTBR+6]=86;
[PTBR+7]="0110";

[PTBR+8]=83;
[PTBR+9]="0100";
[PTBR+10]=84;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

[PTBR+16]=87;
[PTBR+17]="0110";
[PTBR+18]=88;
[PTBR+19]="0110";

[PROCESS_TABLE+32+1]=2;
[PROCESS_TABLE+32+4]=CREATED;
[PROCESS_TABLE+32+11]=89;
[PROCESS_TABLE+32+12]=0;
[PROCESS_TABLE+32+13]=8*512;
[PROCESS_TABLE+32+14]=PTBR;
[PROCESS_TABLE+32+15]=PTLR;

[87*512]=[83*512+1];

alias count R0;
count=48;
while(count<=240) do
	[PROCESS_TABLE + count + 4]=TERMINATED;
	count=count+16;
endwhile;

[TERMINAL_STATUS_TABLE]=0;

breakpoint;
return;


